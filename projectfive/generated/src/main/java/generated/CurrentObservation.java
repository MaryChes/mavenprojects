//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.08.24 at 04:25:00 PM EDT 
//


package generated;

import java.io.Serializable;
import java.math.BigDecimal;
import java.math.BigInteger;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="credit" type="{http://www.w3.org/2001/XMLSchema}token" minOccurs="0"/>
 *         &lt;element name="credit_URL" type="{http://www.w3.org/2001/XMLSchema}anyURI" minOccurs="0"/>
 *         &lt;element name="image" type="{}imageType" minOccurs="0"/>
 *         &lt;element name="suggested_pickup" type="{http://www.w3.org/2001/XMLSchema}token" minOccurs="0"/>
 *         &lt;element name="suggested_pickup_period" type="{http://www.w3.org/2001/XMLSchema}integer" minOccurs="0"/>
 *         &lt;element name="location" type="{http://www.w3.org/2001/XMLSchema}token" minOccurs="0"/>
 *         &lt;element name="station_id" type="{http://www.w3.org/2001/XMLSchema}token" minOccurs="0"/>
 *         &lt;element name="latitude" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="longitude" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="elevation" type="{http://www.w3.org/2001/XMLSchema}integer" minOccurs="0"/>
 *         &lt;element name="observation_time" type="{http://www.w3.org/2001/XMLSchema}token" minOccurs="0"/>
 *         &lt;element name="observation_time_rfc822" type="{http://www.w3.org/2001/XMLSchema}token" minOccurs="0"/>
 *         &lt;element name="weather" type="{http://www.w3.org/2001/XMLSchema}token" minOccurs="0"/>
 *         &lt;element name="temperature_string" type="{http://www.w3.org/2001/XMLSchema}token" minOccurs="0"/>
 *         &lt;element name="temp_f" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/>
 *         &lt;element name="temp_c" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/>
 *         &lt;element name="water_temp_f" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/>
 *         &lt;element name="water_temp_c" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/>
 *         &lt;element name="relative_humidity" type="{http://www.w3.org/2001/XMLSchema}integer" minOccurs="0"/>
 *         &lt;element name="wind_string" type="{http://www.w3.org/2001/XMLSchema}token" minOccurs="0"/>
 *         &lt;element name="wind_dir" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="wind_degrees" type="{http://www.w3.org/2001/XMLSchema}integer" minOccurs="0"/>
 *         &lt;element name="wind_mph" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/>
 *         &lt;element name="wind_gust_mph" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/>
 *         &lt;element name="wind_kt" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/>
 *         &lt;element name="wind_gust_kt" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/>
 *         &lt;element name="pressure_string" type="{http://www.w3.org/2001/XMLSchema}token" minOccurs="0"/>
 *         &lt;element name="pressure_mb" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/>
 *         &lt;element name="pressure_in" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/>
 *         &lt;element name="pressure_tendency_mb" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/>
 *         &lt;element name="pressure_tendency_in" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/>
 *         &lt;element name="dewpoint_string" type="{http://www.w3.org/2001/XMLSchema}token" minOccurs="0"/>
 *         &lt;element name="dewpoint_f" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/>
 *         &lt;element name="dewpoint_c" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/>
 *         &lt;element name="heat_index_string" type="{http://www.w3.org/2001/XMLSchema}token" minOccurs="0"/>
 *         &lt;element name="heat_index_f" type="{http://www.w3.org/2001/XMLSchema}integer" minOccurs="0"/>
 *         &lt;element name="heat_index_c" type="{http://www.w3.org/2001/XMLSchema}integer" minOccurs="0"/>
 *         &lt;element name="windchill_string" type="{http://www.w3.org/2001/XMLSchema}token" minOccurs="0"/>
 *         &lt;element name="windchill_f" type="{http://www.w3.org/2001/XMLSchema}integer" minOccurs="0"/>
 *         &lt;element name="windchill_c" type="{http://www.w3.org/2001/XMLSchema}integer" minOccurs="0"/>
 *         &lt;element name="visibility_mi" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/>
 *         &lt;element name="wave_height_m" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/>
 *         &lt;element name="wave_height_ft" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/>
 *         &lt;element name="dominant_period_sec" type="{http://www.w3.org/2001/XMLSchema}integer" minOccurs="0"/>
 *         &lt;element name="average_period_sec" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/>
 *         &lt;element name="mean_wave_dir" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="mean_wave_degrees" type="{http://www.w3.org/2001/XMLSchema}integer" minOccurs="0"/>
 *         &lt;element name="tide_ft" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/>
 *         &lt;element name="steepness" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="water_column_height" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/>
 *         &lt;element name="surf_height_ft" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="swell_dir" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="swell_degrees" type="{http://www.w3.org/2001/XMLSchema}integer" minOccurs="0"/>
 *         &lt;element name="swell_period" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="icon_url_base" type="{http://www.w3.org/2001/XMLSchema}anyURI" minOccurs="0"/>
 *         &lt;element name="icon_name" type="{http://www.w3.org/2001/XMLSchema}anyURI" minOccurs="0"/>
 *         &lt;element name="two_day_history_url" type="{http://www.w3.org/2001/XMLSchema}anyURI" minOccurs="0"/>
 *         &lt;element name="icon_url_name" type="{http://www.w3.org/2001/XMLSchema}anyURI" minOccurs="0"/>
 *         &lt;element name="ob_url" type="{http://www.w3.org/2001/XMLSchema}anyURI" minOccurs="0"/>
 *         &lt;element name="disclaimer_url" type="{http://www.w3.org/2001/XMLSchema}anyURI" minOccurs="0"/>
 *         &lt;element name="copyright_url" type="{http://www.w3.org/2001/XMLSchema}anyURI" minOccurs="0"/>
 *         &lt;element name="privacy_policy_url" type="{http://www.w3.org/2001/XMLSchema}anyURI" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="version" type="{http://www.w3.org/2001/XMLSchema}string" default="1.0" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "credit",
    "creditURL",
    "image",
    "suggestedPickup",
    "suggestedPickupPeriod",
    "location",
    "stationId",
    "latitude",
    "longitude",
    "elevation",
    "observationTime",
    "observationTimeRfc822",
    "weather",
    "temperatureString",
    "tempF",
    "tempC",
    "waterTempF",
    "waterTempC",
    "relativeHumidity",
    "windString",
    "windDir",
    "windDegrees",
    "windMph",
    "windGustMph",
    "windKt",
    "windGustKt",
    "pressureString",
    "pressureMb",
    "pressureIn",
    "pressureTendencyMb",
    "pressureTendencyIn",
    "dewpointString",
    "dewpointF",
    "dewpointC",
    "heatIndexString",
    "heatIndexF",
    "heatIndexC",
    "windchillString",
    "windchillF",
    "windchillC",
    "visibilityMi",
    "waveHeightM",
    "waveHeightFt",
    "dominantPeriodSec",
    "averagePeriodSec",
    "meanWaveDir",
    "meanWaveDegrees",
    "tideFt",
    "steepness",
    "waterColumnHeight",
    "surfHeightFt",
    "swellDir",
    "swellDegrees",
    "swellPeriod",
    "iconUrlBase",
    "iconName",
    "twoDayHistoryUrl",
    "iconUrlName",
    "obUrl",
    "disclaimerUrl",
    "copyrightUrl",
    "privacyPolicyUrl"
})
@XmlRootElement(name = "current_observation")
@Entity(name = "CurrentObservation")
@Table(name = "CURRENTOBSERVATION")
@Inheritance(strategy = InheritanceType.JOINED)
public class CurrentObservation
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 100L;
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String credit;
    @XmlElement(name = "credit_URL")
    @XmlSchemaType(name = "anyURI")
    protected String creditURL;
    protected ImageType image;
    @XmlElement(name = "suggested_pickup")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String suggestedPickup;
    @XmlElement(name = "suggested_pickup_period")
    protected BigInteger suggestedPickupPeriod;
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String location;
    @XmlElement(name = "station_id")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String stationId;
    protected String latitude;
    protected String longitude;
    protected BigInteger elevation;
    @XmlElement(name = "observation_time")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String observationTime;
    @XmlElement(name = "observation_time_rfc822")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String observationTimeRfc822;
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String weather;
    @XmlElement(name = "temperature_string")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String temperatureString;
    @XmlElement(name = "temp_f")
    protected BigDecimal tempF;
    @XmlElement(name = "temp_c")
    protected BigDecimal tempC;
    @XmlElement(name = "water_temp_f")
    protected BigDecimal waterTempF;
    @XmlElement(name = "water_temp_c")
    protected BigDecimal waterTempC;
    @XmlElement(name = "relative_humidity")
    protected BigInteger relativeHumidity;
    @XmlElement(name = "wind_string")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String windString;
    @XmlElement(name = "wind_dir")
    protected String windDir;
    @XmlElement(name = "wind_degrees")
    protected BigInteger windDegrees;
    @XmlElement(name = "wind_mph")
    protected BigDecimal windMph;
    @XmlElement(name = "wind_gust_mph")
    protected BigDecimal windGustMph;
    @XmlElement(name = "wind_kt")
    protected BigDecimal windKt;
    @XmlElement(name = "wind_gust_kt")
    protected BigDecimal windGustKt;
    @XmlElement(name = "pressure_string")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String pressureString;
    @XmlElement(name = "pressure_mb")
    protected BigDecimal pressureMb;
    @XmlElement(name = "pressure_in")
    protected BigDecimal pressureIn;
    @XmlElement(name = "pressure_tendency_mb")
    protected BigDecimal pressureTendencyMb;
    @XmlElement(name = "pressure_tendency_in")
    protected BigDecimal pressureTendencyIn;
    @XmlElement(name = "dewpoint_string")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String dewpointString;
    @XmlElement(name = "dewpoint_f")
    protected BigDecimal dewpointF;
    @XmlElement(name = "dewpoint_c")
    protected BigDecimal dewpointC;
    @XmlElement(name = "heat_index_string")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String heatIndexString;
    @XmlElement(name = "heat_index_f")
    protected BigInteger heatIndexF;
    @XmlElement(name = "heat_index_c")
    protected BigInteger heatIndexC;
    @XmlElement(name = "windchill_string")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String windchillString;
    @XmlElement(name = "windchill_f")
    protected BigInteger windchillF;
    @XmlElement(name = "windchill_c")
    protected BigInteger windchillC;
    @XmlElement(name = "visibility_mi")
    protected BigDecimal visibilityMi;
    @XmlElement(name = "wave_height_m")
    protected BigDecimal waveHeightM;
    @XmlElement(name = "wave_height_ft")
    protected BigDecimal waveHeightFt;
    @XmlElement(name = "dominant_period_sec")
    protected BigInteger dominantPeriodSec;
    @XmlElement(name = "average_period_sec")
    protected BigDecimal averagePeriodSec;
    @XmlElement(name = "mean_wave_dir")
    protected String meanWaveDir;
    @XmlElement(name = "mean_wave_degrees")
    protected BigInteger meanWaveDegrees;
    @XmlElement(name = "tide_ft")
    protected BigDecimal tideFt;
    protected String steepness;
    @XmlElement(name = "water_column_height")
    protected BigDecimal waterColumnHeight;
    @XmlElement(name = "surf_height_ft")
    protected String surfHeightFt;
    @XmlElement(name = "swell_dir")
    protected String swellDir;
    @XmlElement(name = "swell_degrees")
    protected BigInteger swellDegrees;
    @XmlElement(name = "swell_period")
    protected String swellPeriod;
    @XmlElement(name = "icon_url_base")
    @XmlSchemaType(name = "anyURI")
    protected String iconUrlBase;
    @XmlElement(name = "icon_name")
    @XmlSchemaType(name = "anyURI")
    protected String iconName;
    @XmlElement(name = "two_day_history_url")
    @XmlSchemaType(name = "anyURI")
    protected String twoDayHistoryUrl;
    @XmlElement(name = "icon_url_name")
    @XmlSchemaType(name = "anyURI")
    protected String iconUrlName;
    @XmlElement(name = "ob_url")
    @XmlSchemaType(name = "anyURI")
    protected String obUrl;
    @XmlElement(name = "disclaimer_url")
    @XmlSchemaType(name = "anyURI")
    protected String disclaimerUrl;
    @XmlElement(name = "copyright_url")
    @XmlSchemaType(name = "anyURI")
    protected String copyrightUrl;
    @XmlElement(name = "privacy_policy_url")
    @XmlSchemaType(name = "anyURI")
    protected String privacyPolicyUrl;
    @XmlAttribute(name = "version")
    protected String version;
    @XmlAttribute(name = "Hjid")
    protected Long hjid;

    /**
     * Gets the value of the credit property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CREDIT", length = 255)
    public String getCredit() {
        return credit;
    }

    /**
     * Sets the value of the credit property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCredit(String value) {
        this.credit = value;
    }

    /**
     * Gets the value of the creditURL property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CREDITURL")
    public String getCreditURL() {
        return creditURL;
    }

    /**
     * Sets the value of the creditURL property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCreditURL(String value) {
        this.creditURL = value;
    }

    /**
     * Gets the value of the image property.
     * 
     * @return
     *     possible object is
     *     {@link ImageType }
     *     
     */
    @ManyToOne(targetEntity = ImageType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "IMAGE_CURRENTOBSERVATION_HJID")
    public ImageType getImage() {
        return image;
    }

    /**
     * Sets the value of the image property.
     * 
     * @param value
     *     allowed object is
     *     {@link ImageType }
     *     
     */
    public void setImage(ImageType value) {
        this.image = value;
    }

    /**
     * Gets the value of the suggestedPickup property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SUGGESTEDPICKUP", length = 255)
    public String getSuggestedPickup() {
        return suggestedPickup;
    }

    /**
     * Sets the value of the suggestedPickup property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSuggestedPickup(String value) {
        this.suggestedPickup = value;
    }

    /**
     * Gets the value of the suggestedPickupPeriod property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "SUGGESTEDPICKUPPERIOD", precision = 20, scale = 0)
    public BigInteger getSuggestedPickupPeriod() {
        return suggestedPickupPeriod;
    }

    /**
     * Sets the value of the suggestedPickupPeriod property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setSuggestedPickupPeriod(BigInteger value) {
        this.suggestedPickupPeriod = value;
    }

    /**
     * Gets the value of the location property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LOCATION_", length = 255)
    public String getLocation() {
        return location;
    }

    /**
     * Sets the value of the location property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLocation(String value) {
        this.location = value;
    }

    /**
     * Gets the value of the stationId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "STATIONID", length = 255)
    public String getStationId() {
        return stationId;
    }

    /**
     * Sets the value of the stationId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStationId(String value) {
        this.stationId = value;
    }

    /**
     * Gets the value of the latitude property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LATITUDE", length = 255)
    public String getLatitude() {
        return latitude;
    }

    /**
     * Sets the value of the latitude property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLatitude(String value) {
        this.latitude = value;
    }

    /**
     * Gets the value of the longitude property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LONGITUDE", length = 255)
    public String getLongitude() {
        return longitude;
    }

    /**
     * Sets the value of the longitude property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLongitude(String value) {
        this.longitude = value;
    }

    /**
     * Gets the value of the elevation property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "ELEVATION", precision = 20, scale = 0)
    public BigInteger getElevation() {
        return elevation;
    }

    /**
     * Sets the value of the elevation property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setElevation(BigInteger value) {
        this.elevation = value;
    }

    /**
     * Gets the value of the observationTime property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "OBSERVATIONTIME", length = 255)
    public String getObservationTime() {
        return observationTime;
    }

    /**
     * Sets the value of the observationTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setObservationTime(String value) {
        this.observationTime = value;
    }

    /**
     * Gets the value of the observationTimeRfc822 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "OBSERVATIONTIMERFC822", length = 255)
    public String getObservationTimeRfc822() {
        return observationTimeRfc822;
    }

    /**
     * Sets the value of the observationTimeRfc822 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setObservationTimeRfc822(String value) {
        this.observationTimeRfc822 = value;
    }

    /**
     * Gets the value of the weather property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "WEATHER", length = 255)
    public String getWeather() {
        return weather;
    }

    /**
     * Sets the value of the weather property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setWeather(String value) {
        this.weather = value;
    }

    /**
     * Gets the value of the temperatureString property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TEMPERATURESTRING", length = 255)
    public String getTemperatureString() {
        return temperatureString;
    }

    /**
     * Sets the value of the temperatureString property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTemperatureString(String value) {
        this.temperatureString = value;
    }

    /**
     * Gets the value of the tempF property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "TEMPF", precision = 20, scale = 10)
    public BigDecimal getTempF() {
        return tempF;
    }

    /**
     * Sets the value of the tempF property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setTempF(BigDecimal value) {
        this.tempF = value;
    }

    /**
     * Gets the value of the tempC property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "TEMPC", precision = 20, scale = 10)
    public BigDecimal getTempC() {
        return tempC;
    }

    /**
     * Sets the value of the tempC property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setTempC(BigDecimal value) {
        this.tempC = value;
    }

    /**
     * Gets the value of the waterTempF property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "WATERTEMPF", precision = 20, scale = 10)
    public BigDecimal getWaterTempF() {
        return waterTempF;
    }

    /**
     * Sets the value of the waterTempF property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setWaterTempF(BigDecimal value) {
        this.waterTempF = value;
    }

    /**
     * Gets the value of the waterTempC property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "WATERTEMPC", precision = 20, scale = 10)
    public BigDecimal getWaterTempC() {
        return waterTempC;
    }

    /**
     * Sets the value of the waterTempC property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setWaterTempC(BigDecimal value) {
        this.waterTempC = value;
    }

    /**
     * Gets the value of the relativeHumidity property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "RELATIVEHUMIDITY", precision = 20, scale = 0)
    public BigInteger getRelativeHumidity() {
        return relativeHumidity;
    }

    /**
     * Sets the value of the relativeHumidity property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setRelativeHumidity(BigInteger value) {
        this.relativeHumidity = value;
    }

    /**
     * Gets the value of the windString property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "WINDSTRING", length = 255)
    public String getWindString() {
        return windString;
    }

    /**
     * Sets the value of the windString property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setWindString(String value) {
        this.windString = value;
    }

    /**
     * Gets the value of the windDir property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "WINDDIR", length = 255)
    public String getWindDir() {
        return windDir;
    }

    /**
     * Sets the value of the windDir property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setWindDir(String value) {
        this.windDir = value;
    }

    /**
     * Gets the value of the windDegrees property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "WINDDEGREES", precision = 20, scale = 0)
    public BigInteger getWindDegrees() {
        return windDegrees;
    }

    /**
     * Sets the value of the windDegrees property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setWindDegrees(BigInteger value) {
        this.windDegrees = value;
    }

    /**
     * Gets the value of the windMph property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "WINDMPH", precision = 20, scale = 10)
    public BigDecimal getWindMph() {
        return windMph;
    }

    /**
     * Sets the value of the windMph property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setWindMph(BigDecimal value) {
        this.windMph = value;
    }

    /**
     * Gets the value of the windGustMph property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "WINDGUSTMPH", precision = 20, scale = 10)
    public BigDecimal getWindGustMph() {
        return windGustMph;
    }

    /**
     * Sets the value of the windGustMph property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setWindGustMph(BigDecimal value) {
        this.windGustMph = value;
    }

    /**
     * Gets the value of the windKt property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "WINDKT", precision = 20, scale = 10)
    public BigDecimal getWindKt() {
        return windKt;
    }

    /**
     * Sets the value of the windKt property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setWindKt(BigDecimal value) {
        this.windKt = value;
    }

    /**
     * Gets the value of the windGustKt property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "WINDGUSTKT", precision = 20, scale = 10)
    public BigDecimal getWindGustKt() {
        return windGustKt;
    }

    /**
     * Sets the value of the windGustKt property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setWindGustKt(BigDecimal value) {
        this.windGustKt = value;
    }

    /**
     * Gets the value of the pressureString property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PRESSURESTRING", length = 255)
    public String getPressureString() {
        return pressureString;
    }

    /**
     * Sets the value of the pressureString property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPressureString(String value) {
        this.pressureString = value;
    }

    /**
     * Gets the value of the pressureMb property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "PRESSUREMB", precision = 20, scale = 10)
    public BigDecimal getPressureMb() {
        return pressureMb;
    }

    /**
     * Sets the value of the pressureMb property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setPressureMb(BigDecimal value) {
        this.pressureMb = value;
    }

    /**
     * Gets the value of the pressureIn property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "PRESSUREIN", precision = 20, scale = 10)
    public BigDecimal getPressureIn() {
        return pressureIn;
    }

    /**
     * Sets the value of the pressureIn property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setPressureIn(BigDecimal value) {
        this.pressureIn = value;
    }

    /**
     * Gets the value of the pressureTendencyMb property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "PRESSURETENDENCYMB", precision = 20, scale = 10)
    public BigDecimal getPressureTendencyMb() {
        return pressureTendencyMb;
    }

    /**
     * Sets the value of the pressureTendencyMb property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setPressureTendencyMb(BigDecimal value) {
        this.pressureTendencyMb = value;
    }

    /**
     * Gets the value of the pressureTendencyIn property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "PRESSURETENDENCYIN", precision = 20, scale = 10)
    public BigDecimal getPressureTendencyIn() {
        return pressureTendencyIn;
    }

    /**
     * Sets the value of the pressureTendencyIn property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setPressureTendencyIn(BigDecimal value) {
        this.pressureTendencyIn = value;
    }

    /**
     * Gets the value of the dewpointString property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "DEWPOINTSTRING", length = 255)
    public String getDewpointString() {
        return dewpointString;
    }

    /**
     * Sets the value of the dewpointString property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDewpointString(String value) {
        this.dewpointString = value;
    }

    /**
     * Gets the value of the dewpointF property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "DEWPOINTF", precision = 20, scale = 10)
    public BigDecimal getDewpointF() {
        return dewpointF;
    }

    /**
     * Sets the value of the dewpointF property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setDewpointF(BigDecimal value) {
        this.dewpointF = value;
    }

    /**
     * Gets the value of the dewpointC property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "DEWPOINTC", precision = 20, scale = 10)
    public BigDecimal getDewpointC() {
        return dewpointC;
    }

    /**
     * Sets the value of the dewpointC property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setDewpointC(BigDecimal value) {
        this.dewpointC = value;
    }

    /**
     * Gets the value of the heatIndexString property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "HEATINDEXSTRING", length = 255)
    public String getHeatIndexString() {
        return heatIndexString;
    }

    /**
     * Sets the value of the heatIndexString property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHeatIndexString(String value) {
        this.heatIndexString = value;
    }

    /**
     * Gets the value of the heatIndexF property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "HEATINDEXF", precision = 20, scale = 0)
    public BigInteger getHeatIndexF() {
        return heatIndexF;
    }

    /**
     * Sets the value of the heatIndexF property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setHeatIndexF(BigInteger value) {
        this.heatIndexF = value;
    }

    /**
     * Gets the value of the heatIndexC property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "HEATINDEXC", precision = 20, scale = 0)
    public BigInteger getHeatIndexC() {
        return heatIndexC;
    }

    /**
     * Sets the value of the heatIndexC property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setHeatIndexC(BigInteger value) {
        this.heatIndexC = value;
    }

    /**
     * Gets the value of the windchillString property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "WINDCHILLSTRING", length = 255)
    public String getWindchillString() {
        return windchillString;
    }

    /**
     * Sets the value of the windchillString property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setWindchillString(String value) {
        this.windchillString = value;
    }

    /**
     * Gets the value of the windchillF property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "WINDCHILLF", precision = 20, scale = 0)
    public BigInteger getWindchillF() {
        return windchillF;
    }

    /**
     * Sets the value of the windchillF property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setWindchillF(BigInteger value) {
        this.windchillF = value;
    }

    /**
     * Gets the value of the windchillC property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "WINDCHILLC", precision = 20, scale = 0)
    public BigInteger getWindchillC() {
        return windchillC;
    }

    /**
     * Sets the value of the windchillC property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setWindchillC(BigInteger value) {
        this.windchillC = value;
    }

    /**
     * Gets the value of the visibilityMi property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "VISIBILITYMI", precision = 20, scale = 10)
    public BigDecimal getVisibilityMi() {
        return visibilityMi;
    }

    /**
     * Sets the value of the visibilityMi property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setVisibilityMi(BigDecimal value) {
        this.visibilityMi = value;
    }

    /**
     * Gets the value of the waveHeightM property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "WAVEHEIGHTM", precision = 20, scale = 10)
    public BigDecimal getWaveHeightM() {
        return waveHeightM;
    }

    /**
     * Sets the value of the waveHeightM property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setWaveHeightM(BigDecimal value) {
        this.waveHeightM = value;
    }

    /**
     * Gets the value of the waveHeightFt property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "WAVEHEIGHTFT", precision = 20, scale = 10)
    public BigDecimal getWaveHeightFt() {
        return waveHeightFt;
    }

    /**
     * Sets the value of the waveHeightFt property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setWaveHeightFt(BigDecimal value) {
        this.waveHeightFt = value;
    }

    /**
     * Gets the value of the dominantPeriodSec property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "DOMINANTPERIODSEC", precision = 20, scale = 0)
    public BigInteger getDominantPeriodSec() {
        return dominantPeriodSec;
    }

    /**
     * Sets the value of the dominantPeriodSec property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setDominantPeriodSec(BigInteger value) {
        this.dominantPeriodSec = value;
    }

    /**
     * Gets the value of the averagePeriodSec property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "AVERAGEPERIODSEC", precision = 20, scale = 10)
    public BigDecimal getAveragePeriodSec() {
        return averagePeriodSec;
    }

    /**
     * Sets the value of the averagePeriodSec property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setAveragePeriodSec(BigDecimal value) {
        this.averagePeriodSec = value;
    }

    /**
     * Gets the value of the meanWaveDir property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "MEANWAVEDIR", length = 255)
    public String getMeanWaveDir() {
        return meanWaveDir;
    }

    /**
     * Sets the value of the meanWaveDir property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMeanWaveDir(String value) {
        this.meanWaveDir = value;
    }

    /**
     * Gets the value of the meanWaveDegrees property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "MEANWAVEDEGREES", precision = 20, scale = 0)
    public BigInteger getMeanWaveDegrees() {
        return meanWaveDegrees;
    }

    /**
     * Sets the value of the meanWaveDegrees property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setMeanWaveDegrees(BigInteger value) {
        this.meanWaveDegrees = value;
    }

    /**
     * Gets the value of the tideFt property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "TIDEFT", precision = 20, scale = 10)
    public BigDecimal getTideFt() {
        return tideFt;
    }

    /**
     * Sets the value of the tideFt property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setTideFt(BigDecimal value) {
        this.tideFt = value;
    }

    /**
     * Gets the value of the steepness property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "STEEPNESS", length = 255)
    public String getSteepness() {
        return steepness;
    }

    /**
     * Sets the value of the steepness property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSteepness(String value) {
        this.steepness = value;
    }

    /**
     * Gets the value of the waterColumnHeight property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    @Basic
    @Column(name = "WATERCOLUMNHEIGHT", precision = 20, scale = 10)
    public BigDecimal getWaterColumnHeight() {
        return waterColumnHeight;
    }

    /**
     * Sets the value of the waterColumnHeight property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setWaterColumnHeight(BigDecimal value) {
        this.waterColumnHeight = value;
    }

    /**
     * Gets the value of the surfHeightFt property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SURFHEIGHTFT", length = 255)
    public String getSurfHeightFt() {
        return surfHeightFt;
    }

    /**
     * Sets the value of the surfHeightFt property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSurfHeightFt(String value) {
        this.surfHeightFt = value;
    }

    /**
     * Gets the value of the swellDir property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SWELLDIR", length = 255)
    public String getSwellDir() {
        return swellDir;
    }

    /**
     * Sets the value of the swellDir property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSwellDir(String value) {
        this.swellDir = value;
    }

    /**
     * Gets the value of the swellDegrees property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "SWELLDEGREES", precision = 20, scale = 0)
    public BigInteger getSwellDegrees() {
        return swellDegrees;
    }

    /**
     * Sets the value of the swellDegrees property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setSwellDegrees(BigInteger value) {
        this.swellDegrees = value;
    }

    /**
     * Gets the value of the swellPeriod property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "SWELLPERIOD", length = 255)
    public String getSwellPeriod() {
        return swellPeriod;
    }

    /**
     * Sets the value of the swellPeriod property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSwellPeriod(String value) {
        this.swellPeriod = value;
    }

    /**
     * Gets the value of the iconUrlBase property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ICONURLBASE")
    public String getIconUrlBase() {
        return iconUrlBase;
    }

    /**
     * Sets the value of the iconUrlBase property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIconUrlBase(String value) {
        this.iconUrlBase = value;
    }

    /**
     * Gets the value of the iconName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ICONNAME")
    public String getIconName() {
        return iconName;
    }

    /**
     * Sets the value of the iconName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIconName(String value) {
        this.iconName = value;
    }

    /**
     * Gets the value of the twoDayHistoryUrl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TWODAYHISTORYURL")
    public String getTwoDayHistoryUrl() {
        return twoDayHistoryUrl;
    }

    /**
     * Sets the value of the twoDayHistoryUrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTwoDayHistoryUrl(String value) {
        this.twoDayHistoryUrl = value;
    }

    /**
     * Gets the value of the iconUrlName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ICONURLNAME")
    public String getIconUrlName() {
        return iconUrlName;
    }

    /**
     * Sets the value of the iconUrlName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIconUrlName(String value) {
        this.iconUrlName = value;
    }

    /**
     * Gets the value of the obUrl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "OBURL")
    public String getObUrl() {
        return obUrl;
    }

    /**
     * Sets the value of the obUrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setObUrl(String value) {
        this.obUrl = value;
    }

    /**
     * Gets the value of the disclaimerUrl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "DISCLAIMERURL")
    public String getDisclaimerUrl() {
        return disclaimerUrl;
    }

    /**
     * Sets the value of the disclaimerUrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDisclaimerUrl(String value) {
        this.disclaimerUrl = value;
    }

    /**
     * Gets the value of the copyrightUrl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "COPYRIGHTURL")
    public String getCopyrightUrl() {
        return copyrightUrl;
    }

    /**
     * Sets the value of the copyrightUrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCopyrightUrl(String value) {
        this.copyrightUrl = value;
    }

    /**
     * Gets the value of the privacyPolicyUrl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PRIVACYPOLICYURL")
    public String getPrivacyPolicyUrl() {
        return privacyPolicyUrl;
    }

    /**
     * Sets the value of the privacyPolicyUrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPrivacyPolicyUrl(String value) {
        this.privacyPolicyUrl = value;
    }

    /**
     * Gets the value of the version property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "VERSION_", length = 255)
    public String getVersion() {
        if (version == null) {
            return "1.0";
        } else {
            return version;
        }
    }

    /**
     * Sets the value of the version property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVersion(String value) {
        this.version = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof CurrentObservation)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final CurrentObservation that = ((CurrentObservation) object);
        {
            String lhsCredit;
            lhsCredit = this.getCredit();
            String rhsCredit;
            rhsCredit = that.getCredit();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "credit", lhsCredit), LocatorUtils.property(thatLocator, "credit", rhsCredit), lhsCredit, rhsCredit)) {
                return false;
            }
        }
        {
            String lhsCreditURL;
            lhsCreditURL = this.getCreditURL();
            String rhsCreditURL;
            rhsCreditURL = that.getCreditURL();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "creditURL", lhsCreditURL), LocatorUtils.property(thatLocator, "creditURL", rhsCreditURL), lhsCreditURL, rhsCreditURL)) {
                return false;
            }
        }
        {
            ImageType lhsImage;
            lhsImage = this.getImage();
            ImageType rhsImage;
            rhsImage = that.getImage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "image", lhsImage), LocatorUtils.property(thatLocator, "image", rhsImage), lhsImage, rhsImage)) {
                return false;
            }
        }
        {
            String lhsSuggestedPickup;
            lhsSuggestedPickup = this.getSuggestedPickup();
            String rhsSuggestedPickup;
            rhsSuggestedPickup = that.getSuggestedPickup();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "suggestedPickup", lhsSuggestedPickup), LocatorUtils.property(thatLocator, "suggestedPickup", rhsSuggestedPickup), lhsSuggestedPickup, rhsSuggestedPickup)) {
                return false;
            }
        }
        {
            BigInteger lhsSuggestedPickupPeriod;
            lhsSuggestedPickupPeriod = this.getSuggestedPickupPeriod();
            BigInteger rhsSuggestedPickupPeriod;
            rhsSuggestedPickupPeriod = that.getSuggestedPickupPeriod();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "suggestedPickupPeriod", lhsSuggestedPickupPeriod), LocatorUtils.property(thatLocator, "suggestedPickupPeriod", rhsSuggestedPickupPeriod), lhsSuggestedPickupPeriod, rhsSuggestedPickupPeriod)) {
                return false;
            }
        }
        {
            String lhsLocation;
            lhsLocation = this.getLocation();
            String rhsLocation;
            rhsLocation = that.getLocation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "location", lhsLocation), LocatorUtils.property(thatLocator, "location", rhsLocation), lhsLocation, rhsLocation)) {
                return false;
            }
        }
        {
            String lhsStationId;
            lhsStationId = this.getStationId();
            String rhsStationId;
            rhsStationId = that.getStationId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "stationId", lhsStationId), LocatorUtils.property(thatLocator, "stationId", rhsStationId), lhsStationId, rhsStationId)) {
                return false;
            }
        }
        {
            String lhsLatitude;
            lhsLatitude = this.getLatitude();
            String rhsLatitude;
            rhsLatitude = that.getLatitude();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "latitude", lhsLatitude), LocatorUtils.property(thatLocator, "latitude", rhsLatitude), lhsLatitude, rhsLatitude)) {
                return false;
            }
        }
        {
            String lhsLongitude;
            lhsLongitude = this.getLongitude();
            String rhsLongitude;
            rhsLongitude = that.getLongitude();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "longitude", lhsLongitude), LocatorUtils.property(thatLocator, "longitude", rhsLongitude), lhsLongitude, rhsLongitude)) {
                return false;
            }
        }
        {
            BigInteger lhsElevation;
            lhsElevation = this.getElevation();
            BigInteger rhsElevation;
            rhsElevation = that.getElevation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "elevation", lhsElevation), LocatorUtils.property(thatLocator, "elevation", rhsElevation), lhsElevation, rhsElevation)) {
                return false;
            }
        }
        {
            String lhsObservationTime;
            lhsObservationTime = this.getObservationTime();
            String rhsObservationTime;
            rhsObservationTime = that.getObservationTime();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "observationTime", lhsObservationTime), LocatorUtils.property(thatLocator, "observationTime", rhsObservationTime), lhsObservationTime, rhsObservationTime)) {
                return false;
            }
        }
        {
            String lhsObservationTimeRfc822;
            lhsObservationTimeRfc822 = this.getObservationTimeRfc822();
            String rhsObservationTimeRfc822;
            rhsObservationTimeRfc822 = that.getObservationTimeRfc822();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "observationTimeRfc822", lhsObservationTimeRfc822), LocatorUtils.property(thatLocator, "observationTimeRfc822", rhsObservationTimeRfc822), lhsObservationTimeRfc822, rhsObservationTimeRfc822)) {
                return false;
            }
        }
        {
            String lhsWeather;
            lhsWeather = this.getWeather();
            String rhsWeather;
            rhsWeather = that.getWeather();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "weather", lhsWeather), LocatorUtils.property(thatLocator, "weather", rhsWeather), lhsWeather, rhsWeather)) {
                return false;
            }
        }
        {
            String lhsTemperatureString;
            lhsTemperatureString = this.getTemperatureString();
            String rhsTemperatureString;
            rhsTemperatureString = that.getTemperatureString();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "temperatureString", lhsTemperatureString), LocatorUtils.property(thatLocator, "temperatureString", rhsTemperatureString), lhsTemperatureString, rhsTemperatureString)) {
                return false;
            }
        }
        {
            BigDecimal lhsTempF;
            lhsTempF = this.getTempF();
            BigDecimal rhsTempF;
            rhsTempF = that.getTempF();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tempF", lhsTempF), LocatorUtils.property(thatLocator, "tempF", rhsTempF), lhsTempF, rhsTempF)) {
                return false;
            }
        }
        {
            BigDecimal lhsTempC;
            lhsTempC = this.getTempC();
            BigDecimal rhsTempC;
            rhsTempC = that.getTempC();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tempC", lhsTempC), LocatorUtils.property(thatLocator, "tempC", rhsTempC), lhsTempC, rhsTempC)) {
                return false;
            }
        }
        {
            BigDecimal lhsWaterTempF;
            lhsWaterTempF = this.getWaterTempF();
            BigDecimal rhsWaterTempF;
            rhsWaterTempF = that.getWaterTempF();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "waterTempF", lhsWaterTempF), LocatorUtils.property(thatLocator, "waterTempF", rhsWaterTempF), lhsWaterTempF, rhsWaterTempF)) {
                return false;
            }
        }
        {
            BigDecimal lhsWaterTempC;
            lhsWaterTempC = this.getWaterTempC();
            BigDecimal rhsWaterTempC;
            rhsWaterTempC = that.getWaterTempC();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "waterTempC", lhsWaterTempC), LocatorUtils.property(thatLocator, "waterTempC", rhsWaterTempC), lhsWaterTempC, rhsWaterTempC)) {
                return false;
            }
        }
        {
            BigInteger lhsRelativeHumidity;
            lhsRelativeHumidity = this.getRelativeHumidity();
            BigInteger rhsRelativeHumidity;
            rhsRelativeHumidity = that.getRelativeHumidity();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "relativeHumidity", lhsRelativeHumidity), LocatorUtils.property(thatLocator, "relativeHumidity", rhsRelativeHumidity), lhsRelativeHumidity, rhsRelativeHumidity)) {
                return false;
            }
        }
        {
            String lhsWindString;
            lhsWindString = this.getWindString();
            String rhsWindString;
            rhsWindString = that.getWindString();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "windString", lhsWindString), LocatorUtils.property(thatLocator, "windString", rhsWindString), lhsWindString, rhsWindString)) {
                return false;
            }
        }
        {
            String lhsWindDir;
            lhsWindDir = this.getWindDir();
            String rhsWindDir;
            rhsWindDir = that.getWindDir();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "windDir", lhsWindDir), LocatorUtils.property(thatLocator, "windDir", rhsWindDir), lhsWindDir, rhsWindDir)) {
                return false;
            }
        }
        {
            BigInteger lhsWindDegrees;
            lhsWindDegrees = this.getWindDegrees();
            BigInteger rhsWindDegrees;
            rhsWindDegrees = that.getWindDegrees();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "windDegrees", lhsWindDegrees), LocatorUtils.property(thatLocator, "windDegrees", rhsWindDegrees), lhsWindDegrees, rhsWindDegrees)) {
                return false;
            }
        }
        {
            BigDecimal lhsWindMph;
            lhsWindMph = this.getWindMph();
            BigDecimal rhsWindMph;
            rhsWindMph = that.getWindMph();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "windMph", lhsWindMph), LocatorUtils.property(thatLocator, "windMph", rhsWindMph), lhsWindMph, rhsWindMph)) {
                return false;
            }
        }
        {
            BigDecimal lhsWindGustMph;
            lhsWindGustMph = this.getWindGustMph();
            BigDecimal rhsWindGustMph;
            rhsWindGustMph = that.getWindGustMph();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "windGustMph", lhsWindGustMph), LocatorUtils.property(thatLocator, "windGustMph", rhsWindGustMph), lhsWindGustMph, rhsWindGustMph)) {
                return false;
            }
        }
        {
            BigDecimal lhsWindKt;
            lhsWindKt = this.getWindKt();
            BigDecimal rhsWindKt;
            rhsWindKt = that.getWindKt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "windKt", lhsWindKt), LocatorUtils.property(thatLocator, "windKt", rhsWindKt), lhsWindKt, rhsWindKt)) {
                return false;
            }
        }
        {
            BigDecimal lhsWindGustKt;
            lhsWindGustKt = this.getWindGustKt();
            BigDecimal rhsWindGustKt;
            rhsWindGustKt = that.getWindGustKt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "windGustKt", lhsWindGustKt), LocatorUtils.property(thatLocator, "windGustKt", rhsWindGustKt), lhsWindGustKt, rhsWindGustKt)) {
                return false;
            }
        }
        {
            String lhsPressureString;
            lhsPressureString = this.getPressureString();
            String rhsPressureString;
            rhsPressureString = that.getPressureString();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pressureString", lhsPressureString), LocatorUtils.property(thatLocator, "pressureString", rhsPressureString), lhsPressureString, rhsPressureString)) {
                return false;
            }
        }
        {
            BigDecimal lhsPressureMb;
            lhsPressureMb = this.getPressureMb();
            BigDecimal rhsPressureMb;
            rhsPressureMb = that.getPressureMb();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pressureMb", lhsPressureMb), LocatorUtils.property(thatLocator, "pressureMb", rhsPressureMb), lhsPressureMb, rhsPressureMb)) {
                return false;
            }
        }
        {
            BigDecimal lhsPressureIn;
            lhsPressureIn = this.getPressureIn();
            BigDecimal rhsPressureIn;
            rhsPressureIn = that.getPressureIn();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pressureIn", lhsPressureIn), LocatorUtils.property(thatLocator, "pressureIn", rhsPressureIn), lhsPressureIn, rhsPressureIn)) {
                return false;
            }
        }
        {
            BigDecimal lhsPressureTendencyMb;
            lhsPressureTendencyMb = this.getPressureTendencyMb();
            BigDecimal rhsPressureTendencyMb;
            rhsPressureTendencyMb = that.getPressureTendencyMb();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pressureTendencyMb", lhsPressureTendencyMb), LocatorUtils.property(thatLocator, "pressureTendencyMb", rhsPressureTendencyMb), lhsPressureTendencyMb, rhsPressureTendencyMb)) {
                return false;
            }
        }
        {
            BigDecimal lhsPressureTendencyIn;
            lhsPressureTendencyIn = this.getPressureTendencyIn();
            BigDecimal rhsPressureTendencyIn;
            rhsPressureTendencyIn = that.getPressureTendencyIn();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pressureTendencyIn", lhsPressureTendencyIn), LocatorUtils.property(thatLocator, "pressureTendencyIn", rhsPressureTendencyIn), lhsPressureTendencyIn, rhsPressureTendencyIn)) {
                return false;
            }
        }
        {
            String lhsDewpointString;
            lhsDewpointString = this.getDewpointString();
            String rhsDewpointString;
            rhsDewpointString = that.getDewpointString();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dewpointString", lhsDewpointString), LocatorUtils.property(thatLocator, "dewpointString", rhsDewpointString), lhsDewpointString, rhsDewpointString)) {
                return false;
            }
        }
        {
            BigDecimal lhsDewpointF;
            lhsDewpointF = this.getDewpointF();
            BigDecimal rhsDewpointF;
            rhsDewpointF = that.getDewpointF();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dewpointF", lhsDewpointF), LocatorUtils.property(thatLocator, "dewpointF", rhsDewpointF), lhsDewpointF, rhsDewpointF)) {
                return false;
            }
        }
        {
            BigDecimal lhsDewpointC;
            lhsDewpointC = this.getDewpointC();
            BigDecimal rhsDewpointC;
            rhsDewpointC = that.getDewpointC();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dewpointC", lhsDewpointC), LocatorUtils.property(thatLocator, "dewpointC", rhsDewpointC), lhsDewpointC, rhsDewpointC)) {
                return false;
            }
        }
        {
            String lhsHeatIndexString;
            lhsHeatIndexString = this.getHeatIndexString();
            String rhsHeatIndexString;
            rhsHeatIndexString = that.getHeatIndexString();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "heatIndexString", lhsHeatIndexString), LocatorUtils.property(thatLocator, "heatIndexString", rhsHeatIndexString), lhsHeatIndexString, rhsHeatIndexString)) {
                return false;
            }
        }
        {
            BigInteger lhsHeatIndexF;
            lhsHeatIndexF = this.getHeatIndexF();
            BigInteger rhsHeatIndexF;
            rhsHeatIndexF = that.getHeatIndexF();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "heatIndexF", lhsHeatIndexF), LocatorUtils.property(thatLocator, "heatIndexF", rhsHeatIndexF), lhsHeatIndexF, rhsHeatIndexF)) {
                return false;
            }
        }
        {
            BigInteger lhsHeatIndexC;
            lhsHeatIndexC = this.getHeatIndexC();
            BigInteger rhsHeatIndexC;
            rhsHeatIndexC = that.getHeatIndexC();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "heatIndexC", lhsHeatIndexC), LocatorUtils.property(thatLocator, "heatIndexC", rhsHeatIndexC), lhsHeatIndexC, rhsHeatIndexC)) {
                return false;
            }
        }
        {
            String lhsWindchillString;
            lhsWindchillString = this.getWindchillString();
            String rhsWindchillString;
            rhsWindchillString = that.getWindchillString();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "windchillString", lhsWindchillString), LocatorUtils.property(thatLocator, "windchillString", rhsWindchillString), lhsWindchillString, rhsWindchillString)) {
                return false;
            }
        }
        {
            BigInteger lhsWindchillF;
            lhsWindchillF = this.getWindchillF();
            BigInteger rhsWindchillF;
            rhsWindchillF = that.getWindchillF();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "windchillF", lhsWindchillF), LocatorUtils.property(thatLocator, "windchillF", rhsWindchillF), lhsWindchillF, rhsWindchillF)) {
                return false;
            }
        }
        {
            BigInteger lhsWindchillC;
            lhsWindchillC = this.getWindchillC();
            BigInteger rhsWindchillC;
            rhsWindchillC = that.getWindchillC();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "windchillC", lhsWindchillC), LocatorUtils.property(thatLocator, "windchillC", rhsWindchillC), lhsWindchillC, rhsWindchillC)) {
                return false;
            }
        }
        {
            BigDecimal lhsVisibilityMi;
            lhsVisibilityMi = this.getVisibilityMi();
            BigDecimal rhsVisibilityMi;
            rhsVisibilityMi = that.getVisibilityMi();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "visibilityMi", lhsVisibilityMi), LocatorUtils.property(thatLocator, "visibilityMi", rhsVisibilityMi), lhsVisibilityMi, rhsVisibilityMi)) {
                return false;
            }
        }
        {
            BigDecimal lhsWaveHeightM;
            lhsWaveHeightM = this.getWaveHeightM();
            BigDecimal rhsWaveHeightM;
            rhsWaveHeightM = that.getWaveHeightM();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "waveHeightM", lhsWaveHeightM), LocatorUtils.property(thatLocator, "waveHeightM", rhsWaveHeightM), lhsWaveHeightM, rhsWaveHeightM)) {
                return false;
            }
        }
        {
            BigDecimal lhsWaveHeightFt;
            lhsWaveHeightFt = this.getWaveHeightFt();
            BigDecimal rhsWaveHeightFt;
            rhsWaveHeightFt = that.getWaveHeightFt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "waveHeightFt", lhsWaveHeightFt), LocatorUtils.property(thatLocator, "waveHeightFt", rhsWaveHeightFt), lhsWaveHeightFt, rhsWaveHeightFt)) {
                return false;
            }
        }
        {
            BigInteger lhsDominantPeriodSec;
            lhsDominantPeriodSec = this.getDominantPeriodSec();
            BigInteger rhsDominantPeriodSec;
            rhsDominantPeriodSec = that.getDominantPeriodSec();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dominantPeriodSec", lhsDominantPeriodSec), LocatorUtils.property(thatLocator, "dominantPeriodSec", rhsDominantPeriodSec), lhsDominantPeriodSec, rhsDominantPeriodSec)) {
                return false;
            }
        }
        {
            BigDecimal lhsAveragePeriodSec;
            lhsAveragePeriodSec = this.getAveragePeriodSec();
            BigDecimal rhsAveragePeriodSec;
            rhsAveragePeriodSec = that.getAveragePeriodSec();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "averagePeriodSec", lhsAveragePeriodSec), LocatorUtils.property(thatLocator, "averagePeriodSec", rhsAveragePeriodSec), lhsAveragePeriodSec, rhsAveragePeriodSec)) {
                return false;
            }
        }
        {
            String lhsMeanWaveDir;
            lhsMeanWaveDir = this.getMeanWaveDir();
            String rhsMeanWaveDir;
            rhsMeanWaveDir = that.getMeanWaveDir();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "meanWaveDir", lhsMeanWaveDir), LocatorUtils.property(thatLocator, "meanWaveDir", rhsMeanWaveDir), lhsMeanWaveDir, rhsMeanWaveDir)) {
                return false;
            }
        }
        {
            BigInteger lhsMeanWaveDegrees;
            lhsMeanWaveDegrees = this.getMeanWaveDegrees();
            BigInteger rhsMeanWaveDegrees;
            rhsMeanWaveDegrees = that.getMeanWaveDegrees();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "meanWaveDegrees", lhsMeanWaveDegrees), LocatorUtils.property(thatLocator, "meanWaveDegrees", rhsMeanWaveDegrees), lhsMeanWaveDegrees, rhsMeanWaveDegrees)) {
                return false;
            }
        }
        {
            BigDecimal lhsTideFt;
            lhsTideFt = this.getTideFt();
            BigDecimal rhsTideFt;
            rhsTideFt = that.getTideFt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tideFt", lhsTideFt), LocatorUtils.property(thatLocator, "tideFt", rhsTideFt), lhsTideFt, rhsTideFt)) {
                return false;
            }
        }
        {
            String lhsSteepness;
            lhsSteepness = this.getSteepness();
            String rhsSteepness;
            rhsSteepness = that.getSteepness();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "steepness", lhsSteepness), LocatorUtils.property(thatLocator, "steepness", rhsSteepness), lhsSteepness, rhsSteepness)) {
                return false;
            }
        }
        {
            BigDecimal lhsWaterColumnHeight;
            lhsWaterColumnHeight = this.getWaterColumnHeight();
            BigDecimal rhsWaterColumnHeight;
            rhsWaterColumnHeight = that.getWaterColumnHeight();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "waterColumnHeight", lhsWaterColumnHeight), LocatorUtils.property(thatLocator, "waterColumnHeight", rhsWaterColumnHeight), lhsWaterColumnHeight, rhsWaterColumnHeight)) {
                return false;
            }
        }
        {
            String lhsSurfHeightFt;
            lhsSurfHeightFt = this.getSurfHeightFt();
            String rhsSurfHeightFt;
            rhsSurfHeightFt = that.getSurfHeightFt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "surfHeightFt", lhsSurfHeightFt), LocatorUtils.property(thatLocator, "surfHeightFt", rhsSurfHeightFt), lhsSurfHeightFt, rhsSurfHeightFt)) {
                return false;
            }
        }
        {
            String lhsSwellDir;
            lhsSwellDir = this.getSwellDir();
            String rhsSwellDir;
            rhsSwellDir = that.getSwellDir();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "swellDir", lhsSwellDir), LocatorUtils.property(thatLocator, "swellDir", rhsSwellDir), lhsSwellDir, rhsSwellDir)) {
                return false;
            }
        }
        {
            BigInteger lhsSwellDegrees;
            lhsSwellDegrees = this.getSwellDegrees();
            BigInteger rhsSwellDegrees;
            rhsSwellDegrees = that.getSwellDegrees();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "swellDegrees", lhsSwellDegrees), LocatorUtils.property(thatLocator, "swellDegrees", rhsSwellDegrees), lhsSwellDegrees, rhsSwellDegrees)) {
                return false;
            }
        }
        {
            String lhsSwellPeriod;
            lhsSwellPeriod = this.getSwellPeriod();
            String rhsSwellPeriod;
            rhsSwellPeriod = that.getSwellPeriod();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "swellPeriod", lhsSwellPeriod), LocatorUtils.property(thatLocator, "swellPeriod", rhsSwellPeriod), lhsSwellPeriod, rhsSwellPeriod)) {
                return false;
            }
        }
        {
            String lhsIconUrlBase;
            lhsIconUrlBase = this.getIconUrlBase();
            String rhsIconUrlBase;
            rhsIconUrlBase = that.getIconUrlBase();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "iconUrlBase", lhsIconUrlBase), LocatorUtils.property(thatLocator, "iconUrlBase", rhsIconUrlBase), lhsIconUrlBase, rhsIconUrlBase)) {
                return false;
            }
        }
        {
            String lhsIconName;
            lhsIconName = this.getIconName();
            String rhsIconName;
            rhsIconName = that.getIconName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "iconName", lhsIconName), LocatorUtils.property(thatLocator, "iconName", rhsIconName), lhsIconName, rhsIconName)) {
                return false;
            }
        }
        {
            String lhsTwoDayHistoryUrl;
            lhsTwoDayHistoryUrl = this.getTwoDayHistoryUrl();
            String rhsTwoDayHistoryUrl;
            rhsTwoDayHistoryUrl = that.getTwoDayHistoryUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "twoDayHistoryUrl", lhsTwoDayHistoryUrl), LocatorUtils.property(thatLocator, "twoDayHistoryUrl", rhsTwoDayHistoryUrl), lhsTwoDayHistoryUrl, rhsTwoDayHistoryUrl)) {
                return false;
            }
        }
        {
            String lhsIconUrlName;
            lhsIconUrlName = this.getIconUrlName();
            String rhsIconUrlName;
            rhsIconUrlName = that.getIconUrlName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "iconUrlName", lhsIconUrlName), LocatorUtils.property(thatLocator, "iconUrlName", rhsIconUrlName), lhsIconUrlName, rhsIconUrlName)) {
                return false;
            }
        }
        {
            String lhsObUrl;
            lhsObUrl = this.getObUrl();
            String rhsObUrl;
            rhsObUrl = that.getObUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "obUrl", lhsObUrl), LocatorUtils.property(thatLocator, "obUrl", rhsObUrl), lhsObUrl, rhsObUrl)) {
                return false;
            }
        }
        {
            String lhsDisclaimerUrl;
            lhsDisclaimerUrl = this.getDisclaimerUrl();
            String rhsDisclaimerUrl;
            rhsDisclaimerUrl = that.getDisclaimerUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "disclaimerUrl", lhsDisclaimerUrl), LocatorUtils.property(thatLocator, "disclaimerUrl", rhsDisclaimerUrl), lhsDisclaimerUrl, rhsDisclaimerUrl)) {
                return false;
            }
        }
        {
            String lhsCopyrightUrl;
            lhsCopyrightUrl = this.getCopyrightUrl();
            String rhsCopyrightUrl;
            rhsCopyrightUrl = that.getCopyrightUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "copyrightUrl", lhsCopyrightUrl), LocatorUtils.property(thatLocator, "copyrightUrl", rhsCopyrightUrl), lhsCopyrightUrl, rhsCopyrightUrl)) {
                return false;
            }
        }
        {
            String lhsPrivacyPolicyUrl;
            lhsPrivacyPolicyUrl = this.getPrivacyPolicyUrl();
            String rhsPrivacyPolicyUrl;
            rhsPrivacyPolicyUrl = that.getPrivacyPolicyUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "privacyPolicyUrl", lhsPrivacyPolicyUrl), LocatorUtils.property(thatLocator, "privacyPolicyUrl", rhsPrivacyPolicyUrl), lhsPrivacyPolicyUrl, rhsPrivacyPolicyUrl)) {
                return false;
            }
        }
        {
            String lhsVersion;
            lhsVersion = this.getVersion();
            String rhsVersion;
            rhsVersion = that.getVersion();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "version", lhsVersion), LocatorUtils.property(thatLocator, "version", rhsVersion), lhsVersion, rhsVersion)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theCredit;
            theCredit = this.getCredit();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "credit", theCredit), currentHashCode, theCredit);
        }
        {
            String theCreditURL;
            theCreditURL = this.getCreditURL();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "creditURL", theCreditURL), currentHashCode, theCreditURL);
        }
        {
            ImageType theImage;
            theImage = this.getImage();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "image", theImage), currentHashCode, theImage);
        }
        {
            String theSuggestedPickup;
            theSuggestedPickup = this.getSuggestedPickup();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "suggestedPickup", theSuggestedPickup), currentHashCode, theSuggestedPickup);
        }
        {
            BigInteger theSuggestedPickupPeriod;
            theSuggestedPickupPeriod = this.getSuggestedPickupPeriod();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "suggestedPickupPeriod", theSuggestedPickupPeriod), currentHashCode, theSuggestedPickupPeriod);
        }
        {
            String theLocation;
            theLocation = this.getLocation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "location", theLocation), currentHashCode, theLocation);
        }
        {
            String theStationId;
            theStationId = this.getStationId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "stationId", theStationId), currentHashCode, theStationId);
        }
        {
            String theLatitude;
            theLatitude = this.getLatitude();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "latitude", theLatitude), currentHashCode, theLatitude);
        }
        {
            String theLongitude;
            theLongitude = this.getLongitude();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "longitude", theLongitude), currentHashCode, theLongitude);
        }
        {
            BigInteger theElevation;
            theElevation = this.getElevation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "elevation", theElevation), currentHashCode, theElevation);
        }
        {
            String theObservationTime;
            theObservationTime = this.getObservationTime();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "observationTime", theObservationTime), currentHashCode, theObservationTime);
        }
        {
            String theObservationTimeRfc822;
            theObservationTimeRfc822 = this.getObservationTimeRfc822();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "observationTimeRfc822", theObservationTimeRfc822), currentHashCode, theObservationTimeRfc822);
        }
        {
            String theWeather;
            theWeather = this.getWeather();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "weather", theWeather), currentHashCode, theWeather);
        }
        {
            String theTemperatureString;
            theTemperatureString = this.getTemperatureString();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "temperatureString", theTemperatureString), currentHashCode, theTemperatureString);
        }
        {
            BigDecimal theTempF;
            theTempF = this.getTempF();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tempF", theTempF), currentHashCode, theTempF);
        }
        {
            BigDecimal theTempC;
            theTempC = this.getTempC();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tempC", theTempC), currentHashCode, theTempC);
        }
        {
            BigDecimal theWaterTempF;
            theWaterTempF = this.getWaterTempF();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "waterTempF", theWaterTempF), currentHashCode, theWaterTempF);
        }
        {
            BigDecimal theWaterTempC;
            theWaterTempC = this.getWaterTempC();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "waterTempC", theWaterTempC), currentHashCode, theWaterTempC);
        }
        {
            BigInteger theRelativeHumidity;
            theRelativeHumidity = this.getRelativeHumidity();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "relativeHumidity", theRelativeHumidity), currentHashCode, theRelativeHumidity);
        }
        {
            String theWindString;
            theWindString = this.getWindString();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "windString", theWindString), currentHashCode, theWindString);
        }
        {
            String theWindDir;
            theWindDir = this.getWindDir();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "windDir", theWindDir), currentHashCode, theWindDir);
        }
        {
            BigInteger theWindDegrees;
            theWindDegrees = this.getWindDegrees();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "windDegrees", theWindDegrees), currentHashCode, theWindDegrees);
        }
        {
            BigDecimal theWindMph;
            theWindMph = this.getWindMph();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "windMph", theWindMph), currentHashCode, theWindMph);
        }
        {
            BigDecimal theWindGustMph;
            theWindGustMph = this.getWindGustMph();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "windGustMph", theWindGustMph), currentHashCode, theWindGustMph);
        }
        {
            BigDecimal theWindKt;
            theWindKt = this.getWindKt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "windKt", theWindKt), currentHashCode, theWindKt);
        }
        {
            BigDecimal theWindGustKt;
            theWindGustKt = this.getWindGustKt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "windGustKt", theWindGustKt), currentHashCode, theWindGustKt);
        }
        {
            String thePressureString;
            thePressureString = this.getPressureString();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pressureString", thePressureString), currentHashCode, thePressureString);
        }
        {
            BigDecimal thePressureMb;
            thePressureMb = this.getPressureMb();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pressureMb", thePressureMb), currentHashCode, thePressureMb);
        }
        {
            BigDecimal thePressureIn;
            thePressureIn = this.getPressureIn();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pressureIn", thePressureIn), currentHashCode, thePressureIn);
        }
        {
            BigDecimal thePressureTendencyMb;
            thePressureTendencyMb = this.getPressureTendencyMb();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pressureTendencyMb", thePressureTendencyMb), currentHashCode, thePressureTendencyMb);
        }
        {
            BigDecimal thePressureTendencyIn;
            thePressureTendencyIn = this.getPressureTendencyIn();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pressureTendencyIn", thePressureTendencyIn), currentHashCode, thePressureTendencyIn);
        }
        {
            String theDewpointString;
            theDewpointString = this.getDewpointString();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dewpointString", theDewpointString), currentHashCode, theDewpointString);
        }
        {
            BigDecimal theDewpointF;
            theDewpointF = this.getDewpointF();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dewpointF", theDewpointF), currentHashCode, theDewpointF);
        }
        {
            BigDecimal theDewpointC;
            theDewpointC = this.getDewpointC();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dewpointC", theDewpointC), currentHashCode, theDewpointC);
        }
        {
            String theHeatIndexString;
            theHeatIndexString = this.getHeatIndexString();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "heatIndexString", theHeatIndexString), currentHashCode, theHeatIndexString);
        }
        {
            BigInteger theHeatIndexF;
            theHeatIndexF = this.getHeatIndexF();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "heatIndexF", theHeatIndexF), currentHashCode, theHeatIndexF);
        }
        {
            BigInteger theHeatIndexC;
            theHeatIndexC = this.getHeatIndexC();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "heatIndexC", theHeatIndexC), currentHashCode, theHeatIndexC);
        }
        {
            String theWindchillString;
            theWindchillString = this.getWindchillString();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "windchillString", theWindchillString), currentHashCode, theWindchillString);
        }
        {
            BigInteger theWindchillF;
            theWindchillF = this.getWindchillF();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "windchillF", theWindchillF), currentHashCode, theWindchillF);
        }
        {
            BigInteger theWindchillC;
            theWindchillC = this.getWindchillC();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "windchillC", theWindchillC), currentHashCode, theWindchillC);
        }
        {
            BigDecimal theVisibilityMi;
            theVisibilityMi = this.getVisibilityMi();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "visibilityMi", theVisibilityMi), currentHashCode, theVisibilityMi);
        }
        {
            BigDecimal theWaveHeightM;
            theWaveHeightM = this.getWaveHeightM();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "waveHeightM", theWaveHeightM), currentHashCode, theWaveHeightM);
        }
        {
            BigDecimal theWaveHeightFt;
            theWaveHeightFt = this.getWaveHeightFt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "waveHeightFt", theWaveHeightFt), currentHashCode, theWaveHeightFt);
        }
        {
            BigInteger theDominantPeriodSec;
            theDominantPeriodSec = this.getDominantPeriodSec();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dominantPeriodSec", theDominantPeriodSec), currentHashCode, theDominantPeriodSec);
        }
        {
            BigDecimal theAveragePeriodSec;
            theAveragePeriodSec = this.getAveragePeriodSec();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "averagePeriodSec", theAveragePeriodSec), currentHashCode, theAveragePeriodSec);
        }
        {
            String theMeanWaveDir;
            theMeanWaveDir = this.getMeanWaveDir();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "meanWaveDir", theMeanWaveDir), currentHashCode, theMeanWaveDir);
        }
        {
            BigInteger theMeanWaveDegrees;
            theMeanWaveDegrees = this.getMeanWaveDegrees();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "meanWaveDegrees", theMeanWaveDegrees), currentHashCode, theMeanWaveDegrees);
        }
        {
            BigDecimal theTideFt;
            theTideFt = this.getTideFt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tideFt", theTideFt), currentHashCode, theTideFt);
        }
        {
            String theSteepness;
            theSteepness = this.getSteepness();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "steepness", theSteepness), currentHashCode, theSteepness);
        }
        {
            BigDecimal theWaterColumnHeight;
            theWaterColumnHeight = this.getWaterColumnHeight();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "waterColumnHeight", theWaterColumnHeight), currentHashCode, theWaterColumnHeight);
        }
        {
            String theSurfHeightFt;
            theSurfHeightFt = this.getSurfHeightFt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "surfHeightFt", theSurfHeightFt), currentHashCode, theSurfHeightFt);
        }
        {
            String theSwellDir;
            theSwellDir = this.getSwellDir();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "swellDir", theSwellDir), currentHashCode, theSwellDir);
        }
        {
            BigInteger theSwellDegrees;
            theSwellDegrees = this.getSwellDegrees();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "swellDegrees", theSwellDegrees), currentHashCode, theSwellDegrees);
        }
        {
            String theSwellPeriod;
            theSwellPeriod = this.getSwellPeriod();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "swellPeriod", theSwellPeriod), currentHashCode, theSwellPeriod);
        }
        {
            String theIconUrlBase;
            theIconUrlBase = this.getIconUrlBase();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "iconUrlBase", theIconUrlBase), currentHashCode, theIconUrlBase);
        }
        {
            String theIconName;
            theIconName = this.getIconName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "iconName", theIconName), currentHashCode, theIconName);
        }
        {
            String theTwoDayHistoryUrl;
            theTwoDayHistoryUrl = this.getTwoDayHistoryUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "twoDayHistoryUrl", theTwoDayHistoryUrl), currentHashCode, theTwoDayHistoryUrl);
        }
        {
            String theIconUrlName;
            theIconUrlName = this.getIconUrlName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "iconUrlName", theIconUrlName), currentHashCode, theIconUrlName);
        }
        {
            String theObUrl;
            theObUrl = this.getObUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "obUrl", theObUrl), currentHashCode, theObUrl);
        }
        {
            String theDisclaimerUrl;
            theDisclaimerUrl = this.getDisclaimerUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "disclaimerUrl", theDisclaimerUrl), currentHashCode, theDisclaimerUrl);
        }
        {
            String theCopyrightUrl;
            theCopyrightUrl = this.getCopyrightUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "copyrightUrl", theCopyrightUrl), currentHashCode, theCopyrightUrl);
        }
        {
            String thePrivacyPolicyUrl;
            thePrivacyPolicyUrl = this.getPrivacyPolicyUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "privacyPolicyUrl", thePrivacyPolicyUrl), currentHashCode, thePrivacyPolicyUrl);
        }
        {
            String theVersion;
            theVersion = this.getVersion();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "version", theVersion), currentHashCode, theVersion);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    /**
     * Gets the value of the hjid property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "HJID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getHjid() {
        return hjid;
    }

    /**
     * Sets the value of the hjid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setHjid(Long value) {
        this.hjid = value;
    }

}
